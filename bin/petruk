<?php
$basepath = getcwd();
include $basepath."/vendor/autoload.php";

$paket = $argv[1];
if(array_key_exists(2,$argv)) {
    $version = $argv[2];
} else {
    $version = "dev-master";
}

$git_remote_server = "";
$composer_filepath = $basepath."/composer.json";
if(file_exists($composer_filepath)) {
    if(file_exists($paket)) {
        $composer_vendor_path = $paket."/composer.json";
        if(file_exists($composer_vendor_path)) {
            $composer_vendor = json_decode(file_get_contents($composer_vendor_path),true);
            $paket_name = $composer_vendor['name'];
            composer_create_repositories($paket_name,$composer_filepath,false);
        } else {
            die("error vendor bukan paket composer\n\n");
        }
    } else {
        if(strpos($paket,":")) {
            $paket_array = explode(":",$paket);
            $git_remote_server = $paket_array[0];
            $paket_name = $paket_array[1];
            composer_create_repositories($paket_name,$composer_filepath,$git_remote_server);
        } else {
            die("error repository server not found\n\n");
        }
    }
} else {
    die("file composer.json not found");
}

if($git_remote_server) {
    $command = "git ls-remote git@{$git_remote_server}:{$paket_name}.git";
    $hasil = run_proc($command);
    print_r($hasil);
    if(array_key_exists("output",$hasil) && preg_match("/(HEAD)/",$hasil['output'][0])) {
        passthru("composer require {$paket_name}:{$version}");
    } else {
        $user_home = $_SERVER['HOME'];
        $id_rsa_path = $user_home."/.ssh/id_rsa.pub";
        if(!file_exists($id_rsa_path)) {
            run_proc("ssh-keygen -t rsa -b 4096 -f {$user_home}/.ssh/id_rsa -q -N ''");
        }
        if($git_remote_server){
            run_proc("ssh-keyscan -H $git_remote_server >> {$user_home}/.ssh/known_hosts");
        }

        echo "\n\nanda perlu menyimpan ssh-key berikut di server $git_remote_server:\n\n";
        echo file_get_contents("{$user_home}/.ssh/id_rsa.pub")."\n\n";
    }
}